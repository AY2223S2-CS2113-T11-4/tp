@startuml
!include Style.puml

actor User

box Manager COLOR_MAIN_LIGHT
participant ":ToDoListManager" as ToDoListManager COLOR_MAIN
end box

box Logic COLOR_LOGIC_LIGHT
participant ":Parser" as Parser COLOR_LOGIC
participant ":DeleteTaskCommand" as DeleteTaskCommand COLOR_LOGIC
end box

box TaskList COLOR_TASK_LIST_LIGHT
participant ":TaskList" as TaskList COLOR_TASK_LIST
end box

box Ui COLOR_UI_LIGHT
participant ":Ui" as Ui COLOR_UI
end box

box Storage COLOR_STORAGE_LIGHT
participant ":Storage" as Storage COLOR_STORAGE
end box

User -> ToDoListManager: input("delete <index>")
activate ToDoListManager
ToDoListManager -> Parser : parseCommand("delete <index>")
activate Parser
create DeleteTaskCommand
Parser -> DeleteTaskCommand
activate DeleteTaskCommand
DeleteTaskCommand --> Parser : HashMap
deactivate DeleteTaskCommand
Parser -> DeleteTaskCommand : parse("<index>")
activate DeleteTaskCommand
DeleteTaskCommand --> Parser
deactivate DeleteTaskCommand
Parser --> ToDoListManager : command
deactivate Parser
ToDoListManager -> DeleteTaskCommand : execute(taskList, ui)
activate DeleteTaskCommand
DeleteTaskCommand -> TaskList: deleteTask(<index>)
activate TaskList
TaskList --> DeleteTaskCommand
deactivate TaskList
DeleteTaskCommand -> Ui : printDeleteTaskMessage(taskString)
activate Ui
Ui --> DeleteTaskCommand
deactivate Ui
DeleteTaskCommand --> ToDoListManager : result
ToDoListManager --> User : Notify user task has been deleted
deactivate DeleteTaskCommand
destroy DeleteTaskCommand
ToDoListManager ->Storage : saveData(taskList)
activate Storage
Storage -> Storage : updates data
Storage --> ToDoListManager
deactivate Storage

@enduml